1. Show the subject names of books supplied by *supplier2*.

Select CategoryName
from db_subject
inner join db_book on db_book.SubjectID = db_subject.SubjectID
inner join db_supplier on db_book.SupplierID = db_supplier.SupplierID
where db_supplier.CompanyName = 'supplier2'



2. Show the name and price of the most expensive book supplied by
     *supplier3*.

select Title, UnitPrice
from db_book
inner join db_supplier on db_book.SupplierID = db_supplier.SupplierID
where db_supplier.CompanyName = 'supplier3'
order by UnitPrice desc
limit 1



3. Show the unique names of all books ordered by *lastname1
     firstname1*.

select distinct Title
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
where db_customer.LastName = 'lastname1' and db_customer.FirstName = 'firstname1'




4. Show the title of books which have more than 10 units in stock.
*** YOU DID NOT SPECIFY IN THE REQUIREMENTS IF THE QUANTITY REFLECTED IN THE BOOK TABLE IS THE BEGINNING QUANITY 
OR WHAT IS LEFT AFTER EACH ORDER IS FULFILLED OR AFTER EACH ORDER IS MADE***

//THIS QUERY IS ASSUMING THAT THE QUANTITY IN THE BOOK TABLE IS ACCURATE AND UPDATED AFTER EACH ORDER IS MADE
select Title
from db_book
where Quantity > 10



5. Show the total price *lastname1 firstname1* has paid for the books.

select 
sum(db_book.UnitPrice * db_order_detail.Quantity) AS TotalPrice
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
where db_customer.LastName = 'lastname1' and db_customer.FirstName = 'firstname1'




6. Show the names of the customers who have paid less than $80 in
     totals.

select db_customer.FirstName,
db_customer.LastName
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
group by db_customer.FirstName, db_customer.LastName 
having sum(db_book.UnitPrice * db_order_detail.Quantity) < 80.00



7. Show the name of books supplied by *supplier2*.

select Title
from db_book
inner join db_supplier on db_book.SupplierID = db_supplier.SupplierID
where db_supplier.CompanyName = 'supplier2'




8. Show the total price each customer paid and their names.  List the
     result in descending price.

select db_customer.FirstName,
db_customer.LastName,
sum(db_book.UnitPrice * db_order_detail.Quantity) AS TotalPrice
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
group by db_customer.CustomerID 
order by TotalPrice desc




9. Show the names of all the books shipped on 08/04/2016 and their
     shippers' names.

select db_book.Title,
db_shipper.ShipperName
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_shipper on db_order.ShipperID = db_shipper.ShipperID
where db_order.ShippedDate = '2016-08-04'



10. Show the unique names of all the books *lastname1 firstname1* and
     *lastname4 firstname4* *both* ordered.

select distinct Title
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
where (db_customer.LastName = 'lastname1' and db_customer.FirstName = 'firstname1') and 
db_book.Title in (select distinct Title
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
where db_customer.LastName = 'lastname4' and db_customer.FirstName = 'firstname4')


11. Show the names of all the books *lastname6 firstname6* was
     responsible for.

select distinct db_book.Title
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_employee on db_order.EmployeeID = db_employee.EmployeeID
where db_employee.FirstName = 'firstname6' and db_employee.LastName = 'lastname6'


12. Show the names of all the ordered books and their total
     quantities.  List the result in ascending quantity.

select db_book.Title,
sum(db_order_detail.Quantity) AS TotalQuantity
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
group by db_order_detail.BookID
order by TotalQuantity asc




13. Show the names of the customers who ordered at least 2 books.

select db_customer.FirstName,
db_customer.LastName
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
group by db_customer.CustomerID having sum(db_order_detail.Quantity) > 2





14. Show the name of the customers who have ordered at least a book in
     *category3* or *category4* and the book names.

select db_customer.FirstName,
db_customer.LastName, 
db_book.Title
from db_book
inner join db_subject on db_book.SubjectID = db_subject.SubjectID
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
where db_subject.CategoryName = 'category3' or db_subject.CategoryName = 'category4'




15. Show the name of the customer who has ordered at least one book
     written by *author1*.

select distinct db_customer.FirstName,
db_customer.LastName
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
where db_book.Author = 'author1'





16. Show the name and total sale (price of orders) of each employee.

select db_employee.FirstName,
db_employee.LastName,
sum(db_book.UnitPrice * db_order_detail.Quantity) AS TotalSalePrice
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_employee on db_order.EmployeeID = db_employee.EmployeeID
group by db_employee.EmployeeID


17. Show the book names and their respective quantities for open
     orders (the orders which have not been shipped) at midnight
     08/04/2016.

select distinct db_book.Title,
db_book.Quantity
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
where ShippedDate is NULL or ShippedDate > '2016-08-04'


18. Show the names of customers who have ordered more than 1 book and
     the corresponding quantities.  List the result in the descending
     quantity.

select db_customer.FirstName,
db_customer.LastName,
sum(db_order_detail.Quantity) AS TotalBooksOrdered
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
group by db_customer.CustomerID 
order by TotalBooksOrdered desc



19. Show the names of customers who have ordered more than 3 books and
     their respective telephone numbers.

select db_customer.FirstName,
db_customer.LastName,
db_customer.Phone
from db_book
inner join db_order_detail on db_book.BookID = db_order_detail.BookID
inner join db_order on db_order_detail.OrderID = db_order.OrderID
inner join db_customer on db_order.CustomerID = db_customer.CustomerID
group by db_customer.CustomerID having sum(db_order_detail.Quantity) > 3

